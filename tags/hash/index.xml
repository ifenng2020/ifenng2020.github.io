<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hash on 平凡之路</title><link>/tags/hash/</link><description>Recent content in hash on 平凡之路</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><lastBuildDate>Mon, 29 May 2023 15:01:12 +0800</lastBuildDate><atom:link href="/tags/hash/index.xml" rel="self" type="application/rss+xml"/><item><title>Golang一致性哈希实现</title><link>/posts/golang-consistent-hash/</link><pubDate>Mon, 29 May 2023 15:01:12 +0800</pubDate><guid>/posts/golang-consistent-hash/</guid><description>概念 一致性哈希是指将数据分散到多个节点上进行存储的方法。在一致性哈希中，数据通常用数字编码，并使用哈希函数将它们映射到一个固定的哈希环上。在这种情况下，哈希环的大小通常是 2 的某个次方。选择 2 的 32 次方作为哈希环的大小是因为这是一个较大的数字，能够在哈希环上映射到许多不同的点，从而提</description></item></channel></rss>