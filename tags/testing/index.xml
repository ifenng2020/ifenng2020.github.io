<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>testing on 平凡之路</title><link>https://zaifeng.tech/tags/testing/</link><description>Recent content in testing on 平凡之路</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 15 Feb 2023 15:47:26 +0800</lastBuildDate><atom:link href="https://zaifeng.tech/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Golang 测试基础</title><link>https://zaifeng.tech/posts/golang-testing/</link><pubDate>Wed, 15 Feb 2023 15:47:26 +0800</pubDate><guid>https://zaifeng.tech/posts/golang-testing/</guid><description>如今的软件复杂性，给开发带来了大量的精力，有两个方式可以有效缓解这个问题：软件发布之前的同行评审（业务、产品、技术）、以及软件有效的测试（自动化测试） Go基于轻量级的测试方式，基于go工具链以及相关的函数进行，同时测试还涉及压力测试和文档示例 1. 测试基础 1.1. *_test文件 go test</description></item></channel></rss>