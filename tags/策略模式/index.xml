<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>策略模式 on 平凡之路</title><link>https://zaifeng.tech/tags/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</link><description>Recent content in 策略模式 on 平凡之路</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 14 Nov 2022 14:07:44 +0800</lastBuildDate><atom:link href="https://zaifeng.tech/tags/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>Design Pattern Strategy</title><link>https://zaifeng.tech/posts/design-pattern-strategy/</link><pubDate>Mon, 14 Nov 2022 14:07:44 +0800</pubDate><guid>https://zaifeng.tech/posts/design-pattern-strategy/</guid><description>概念 策略是一种行为设计模式， 它将一组行为转换为对象， 并使其在原始上下文对象内部能够相互替换。 策略模式主要的作用还是解耦策略的定义、创建和使用，控制代码的复杂度，让每个部分都不至于过于复杂、代码量过多。除此之外，对于复杂代码来说，策略模式还能让其满足开闭原则，添加新策略的时候，最小</description></item></channel></rss>